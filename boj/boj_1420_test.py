import pytest

from .boj_1420 import solve


@pytest.mark.parametrize(
    "n, m, board, expected",
    [
        (4, 4, ["####", "#K.#", "#..#", "#H.#"], 2),
        (4, 4, ["####", "#K.#", "#H.#", "#..#"], -1),
        (10, 5, ["..#..", ".....", "..#..", "..#..", "...#K", "..#.H", "..#..", "..#..", "..#..", "..#.."], -1),
        (3, 5, ["..#..", "...H.", "....K"], 2),
        (1, 1, ["K"], -1),
        (1, 3, ["K.H"], 1),
        (3, 1, ["K", ".", "H"], 1),
        (3, 1, ["K", "#", "H"], 0),
        (100, 100, ["K" + "." * 99] + ["." * 100] * 98 + ["H" + "." * 99], 2),
        (100, 100, ["K" + "." * 99] + (["#" * 99 + "."] + ["." * 100] + ["." + "#" * 99] + ["." * 100]) * 24 + ["#" * 99 + "."] + ["H" + ".#.." * 24 + ".#."] + ["#..." * 25], 1),
        (5, 10, ["......#...", ".....#....", "..K.#..H..", "..........", "..#......."], 1),
        (4, 5, [".....", ".K#..", "...H.", "....."], 3),
        (4, 5, [".....", ".K...", "...H.", "....."], 4),
        (4, 5, ["K....", "...##", "##...", "....H"], 1),
        (4, 5, [".....", ".....", ".K.H.", "....."], 4),
    ],
)
def test_solve(n, m, board, expected):
    # board = ["K" + "." * 99] + (["#" * 99 + "."] + ["." * 100] + ["." + "#" * 99] + ["." * 100]) * 24 + ["#" * 99 + "."] + ["H" + ".#." * 33] + ["#..." * 25]
    # for line in board:
    #     print(line)
    assert solve(n, m, board) == expected
